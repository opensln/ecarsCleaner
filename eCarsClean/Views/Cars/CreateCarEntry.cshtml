@model eCarsClean.Models.Car

@{ 
    ViewBag.Title = "Add a Car";
}
<style>

</style>

<div class="container">
    <div class="addCarContainer">
        <h2 class="addCarHeading">Add a Car</h2>

        @using (Html.BeginForm("CreateCarEntry", "Cars", FormMethod.Post, new { enctype = "multipart/form-data" }))

        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.ManufacturerId, "Make", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.DropDownList("ManufacturerId", null, htmlAttributes: new { @class = "form-control alertDropDownValue" })*@
                        @Html.DropDownList("ManufacturerId", null,"", htmlAttributes: new { @class = "form-control alertDropDownValue" })
                        @Html.ValidationMessageFor(model => model.ManufacturerId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CarModel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CarModel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CarModel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MilesPerCharge, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MilesPerCharge, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MilesPerCharge, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ImageFile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })*@
                        <input type="file" name="ImageFile" class="form-control" />
                        @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Video, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Video, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Video, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Likes, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Likes, new { htmlAttributes = new { @class = "form-control", @Value = 0} })
                        @Html.ValidationMessageFor(model => model.Likes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit Entry" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

    <div class="addCarBtnHolder">
        @Html.ActionLink("Back to List", "Index", " ", new { @class = "btn btn-default" })
    </div>
    </div>
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

